<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: filter | RIAstar]]></title>
  <link href="http://blog.riastar.net/blog/categories/filter/atom.xml" rel="self"/>
  <link href="http://blog.riastar.net/"/>
  <updated>2013-03-11T01:00:43+01:00</updated>
  <id>http://blog.riastar.net/</id>
  <author>
    <name><![CDATA[RIAstar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pixelate filter with Pixel Bender]]></title>
    <link href="http://blog.riastar.net/2009/03/15/pixelate-filter-with-pixel-bender/"/>
    <updated>2009-03-15T00:00:00+01:00</updated>
    <id>http://blog.riastar.net/2009/03/15/pixelate-filter-with-pixel-bender</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/posts/2009/pixelate-filter.jpg" title="Pixelate filter" >
Well, I finally found some time to dive into the Pixel Bender pool and start playing around with that new technology
that came from Adobe-land. And this is what I came up with for my very first attempt: nothing too fancy, just the Pixel
Bender version of the well known ”Pixelate” PhotoShop filter. Give it a whirl by adjusting the pixel size with the
slider. Flash Player 10 required of course.</p>

<hr />

<p>Here's a working example. Just play around with the <code>Pixel size</code> slider.
<div id="flashcontent-wrapper" class="center flash-video" style="width: 498px; height: 402px">
<div id="flashcontent" style="width: 100%; height:100%"><p>Please install latest <a href='http://www.adobe.com/go/getflashplayer'>Flash Player Plugin</a>.</p></div>
</div>
<script type="text/javascript">
//  <![CDATA[
var flashvars = {};
var params = {};
var attributes = {};
swfobject.embedSWF(
'/labs/pixel_bender/PixelBender.swf',
'flashcontent',
'100%',
'100%',
'10.0',
null,
flashvars,
params,
attributes,
null
);
// ]]>
</script>
</p>

<p>You can <a href="/labs/pixel_bender/srcview/index.html">check the ActionScript source code</a> and here comes the Pixel Bender kernel source:</p>

<p>``` c Pixelate kernel</p>

<pre><code>&lt;languageVersion : 1.0;&gt;

kernel Pixelate
&lt;
   namespace : "net.riastar.shader";
   vendor : "RIAstar";
   version : 1;
   description : "pixelates an image";
&gt;
{
   input image4 src;
   output pixel4 dst;

   parameter float size
   &lt;
      minValue: 1.0;
      maxValue: 20.0;
      defaultValue: 4.0;
   &gt;;

   void evaluatePixel() {
      float2 pos = outCoord();
      float center = (size + 1.0) / 2.0;

      dst = sampleNearest(src, float2(
         pos.x - mod(pos.x, size) + center,
         pos.y - mod(pos.y, size) + center
      ));

      //make sure not to sample outside the borders
      if (dst.a &amp;lt;= 0.0)
         dst = sampleNearest(src, float2(
            pos.x - mod(pos.x, size),
            pos.y - mod(pos.y, size)
         ));
   }
}
</code></pre>

<p>```</p>

<p>I had quite a hard time getting it to work in ActionScript, apparently because I installed the Flex 3.3 SDK just a week
ago. Just putting a declaration of a <code>flash.display.Shader</code> class in my code, was sufficient to stop all code from
executing, although the VM did not crash. I also got no error message whatsoever.</p>

<p>So after a whole hour of trying everything I could think of, I told the compiler to use the old 3.2 SDK and tadaa:
working like a charm. Is it a bug in 3.3 (which was meant to be a bugfix release in the first place) or did I do
something wrong?</p>
]]></content>
  </entry>
  
</feed>
